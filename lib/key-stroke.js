// Generated by CoffeeScript 1.8.0
(function() {
  var Key, KeyCode, KeyKit, KeyStroke, _, _ref;

  _ = require('underscore-plus');

  KeyKit = require('./keykit');

  _ref = require('./key-code'), Key = _ref.Key, KeyCode = _ref.KeyCode;

  module.exports = KeyStroke = (function() {
    function KeyStroke(options) {
      var _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
      if (options == null) {
        options = {};
      }
      this.ctrl = (_ref1 = options.ctrl) != null ? _ref1 : false;
      this.alt = (_ref2 = options.alt) != null ? _ref2 : false;
      this.shift = (_ref3 = options.shift) != null ? _ref3 : false;
      this.meta = (_ref4 = options.meta) != null ? _ref4 : false;
      this.code = (_ref5 = (_ref6 = (_ref7 = options.code) != null ? _ref7 : options.keyCode) != null ? _ref6 : options.keycode) != null ? _ref5 : null;
      this.name = (_ref8 = options.name) != null ? _ref8 : null;
      this.identifier = (_ref9 = options.identifier) != null ? _ref9 : null;
      this.complete();
    }

    KeyStroke.prototype.complete = function() {
      var kc;
      if (this.code != null) {
        kc = KeyCode[this.code];
        this.name = kc.name;
        if (kc.shiftable) {
          this.char = kc.char[this.shift];
        } else {
          this.char = kc.char;
        }
      }
      if (this.name == null) {
        this.name = KeyKit.keynameByCode[this.code];
      }
      return this.char != null ? this.char : this.char = KeyKit.getChar(this);
    };

    KeyStroke.prototype.toString = function() {
      var s, visible;
      visible = !KeyCode.isNotVisible(this.code);
      if (KeyCode.isMod(this.code)) {
        return this.name;
      } else if (!(this.ctrl || this.alt) && visible) {
        return this.char;
      } else {
        s = "";
        s += (this.ctrl ? "ctrl-" : "");
        s += (this.alt ? "alt-" : "");
        s += (this.shift ? "shift-" : "");
        s += this.name.toLowerCase();
        return s;
      }
    };

    KeyStroke.prototype.vimEscaped = function() {
      var kc, name, s, visible;
      kc = KeyCode[this.code];
      visible = kc.visible;
      if (_.contains([16, 17, 18], this.code)) {
        return '';
      } else if (!(this.ctrl || this.alt) && visible) {
        if (this.char !== '<') {
          return this.char;
        } else {
          return '<LT>';
        }
      } else {
        s = "";
        s += (this.ctrl ? "C-" : "");
        s += (this.alt ? "A-" : "");
        s += (this.shift ? "S-" : "");
        name = KeyKit.vimCodeByKeyname[this.name] || this.name.toLowerCase();
        if (name === 'LT') {
          name = '<LT>';
        }
        s += name;
        return "<" + s + ">";
      }
    };

    return KeyStroke;

  })();

}).call(this);
